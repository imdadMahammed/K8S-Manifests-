Created an ebs storage on aws console Ex -:30GB
================================================
Then do this below steps -:
---------------------------

Created a StorageClass with dsc.yaml on dsc dir  -: {vi dsc.yaml}
-----------------------------------------------------------------
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: aws-ebs
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  fsType: ext4
reclaimPolicy: Retain
volumeBindingMode: Immediate

Created a PV -: { Vi pv.yaml}
=============================
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv
spec:
  accessModes:
  - ReadWriteOnce
  awsElasticBlockStore:
    fsType: xfs
    volumeID: vol-0db9ef113925fd943
  capacity:
    storage: 30Gi
  persistentVolumeReclaimPolicy: Retain
  storageClassName: aws-ebs
  volumeMode: Filesystem

Created an pvc -: {vi pvc.yaml}
===============================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: elasticsearch-master
  name: elasticsearch-master-elasticsearch-master-0
  namespace: elk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
  storageClassName: aws-ebs
  volumeName: pv
========================================================================

Deploy commands -:
------------------
kubectl create -f dsc.yaml   {deploy storage class}                if you have any ns then use > kubectl create -f dec.yaml -n ns-name
kubectl create -f pv.yaml   {deploy persistant volume} 
kubectl create -f pvc.yaml   {deploy persistant volume claim}      if you have any ns then use >  kubectl create -f pvc.yaml -n ns-name 

Then Verify the things -:
=========================
Verify the storageclass  - kubectl get sc 
Then Verify the PV       - kubectl get pv
Verify PVC               - kubectl get pvc   

# If you wanna verify them with using Your namespace then use -n ns-name.

